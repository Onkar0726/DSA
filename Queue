import java.util.*;
public class queue {
    public final int max=4;
    public int[]arr=new int [max];
    public int R=-1;
    public int F=-1;

    public void enqueue(int data){
        if(R==max-1){
            System.out.println("Queue Overflow");
            return;
        }
        R++;
        arr[R]=data;
        System.out.println("Enqueue"+arr[R]);
    }
    public void dequeue() {
        try {
            if ( F >= R) {
                System.out.println("Queue Underflow");
                return;
            }
            F++;
            System.out.println("Dequeue" + arr[F]);
        }
        catch (Exception e) {
            System.out.println("Exception occurred during dequeue: " + e.getMessage());
        }
    }
    public void displayQueue() {
        if (F == R) {
            System.out.println("Queue is empty");
            return;
        }
        System.out.print("Current Queue: ");
        for (int i = F + 1; i <= R; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }
public static void main(String[] args) {
        queue q=new queue();
        q.enqueue(10);
        q.enqueue(20);
        q.enqueue(30);
        q.enqueue(40);
        q.enqueue(50);
//        q.dequeue();
//        q.dequeue();
//        q.dequeue();
//        q.dequeue();
        q.displayQueue();
    }
}
